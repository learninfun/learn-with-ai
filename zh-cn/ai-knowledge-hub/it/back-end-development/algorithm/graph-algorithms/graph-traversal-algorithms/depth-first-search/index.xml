<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>深度優先搜尋 on Learn with AI</title><link>https://learninfun.github.io/learn-with-ai/zh-cn/ai-knowledge-hub/it/back-end-development/algorithm/graph-algorithms/graph-traversal-algorithms/depth-first-search/</link><description>Recent content in 深度優先搜尋 on Learn with AI</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://learninfun.github.io/learn-with-ai/zh-cn/ai-knowledge-hub/it/back-end-development/algorithm/graph-algorithms/graph-traversal-algorithms/depth-first-search/index.xml" rel="self" type="application/rss+xml"/><item><title>拓扑排序</title><link>https://learninfun.github.io/learn-with-ai/zh-cn/ai-knowledge-hub/it/back-end-development/algorithm/graph-algorithms/graph-traversal-algorithms/depth-first-search/topological-sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learninfun.github.io/learn-with-ai/zh-cn/ai-knowledge-hub/it/back-end-development/algorithm/graph-algorithms/graph-traversal-algorithms/depth-first-search/topological-sort/</guid><description>习题预习 User ask:
给我5题Topological Sort的中文问题 ChatGPT answer:
有一个有向无环图(DAG) G，请问是否存在一种顶点排序，使得对于所有的边 (u,v)， u 在排序中出现在 v 之前？
在一个旅游路线上有多个城市，每两个城市之间有可能有多依赖关系，建立一个依赖图，请求出任何一种不矛盾的游览序列，使得游览序列中的任何一个城市的依赖先于该城市出现。
有一个项目列表，其中每个项目可能有前置项目，若要完成目标项目，请问最少需要完成多少个项目，以及需要以什么顺序完成才能完成目标项目。
当机器需要先后安装多个软体程式时，若程式之间可能存在依赖关系，请问是否能够找到一个安装顺序，使得每个程式都有其依赖的所有程式都已经安装完毕。
有一个有向图，请问是否存在一种顶点排序，使得图上的所有最短路径都是按照排序中的顺序而定义的，其中最短路径是指任意两个顶点之间的最短路径。
说明知识 User ask:
以中文说明Topological Sort并举例 ChatGPT answer:
Topological Sort是一种图算法，主要用于拓扑分析，用于确定简单有向无环图中节点的线性顺序。简单来说，拓扑排序可以将有向无环图中的节点排序，使得所有的有向边从前面的节点指向后面的节点。
这种排序算法通常用于任务调度和依赖关系的确定。例如，在软件项目中，拓扑排序可以用于确定任务执行顺序或代码构建的顺序。在生活中，拓扑排序可以用于确定各种任务的优先级，例如，基于问题的优先级计划执行顺序，或根据直觉制定待办事项清单。
以下是对如何进行拓扑排序算法的简单步骤：
选择一个没有入度的顶点 去掉该顶点，以及以它为起点的边 重复1和2，直到图为空 举个例子：如下图所示：
4 -&amp;gt; 1 -&amp;gt; 3 -&amp;gt; 5 ^ | |_________| 对该图进行拓扑排序，按照上述步骤，我们可以得到以下结果：[2, 4, 1, 3, 5]，其中，数字表示节点编号，以此为顺序，每个节点都没有向前的有向边。
一个比较复杂的例子：
8 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; 6 -&amp;gt; 7 | | | v v v 1 -&amp;gt; 4 -&amp;gt; 5 9 对该图进行拓扑排序，可以得到以下结果：[1, 8, 2, 3, 4, 5, 6, 7, 9]</description></item></channel></rss>